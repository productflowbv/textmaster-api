name: Unit Tests

on:
  push:
    branches: [ master,development ]
  pull_request:
    branches: [ master ]

jobs:
  provide_php_versions_json:
    runs-on: ubuntu-latest

    steps:
      # git clone + use PHP + composer install
      -   uses: actions/checkout@v2
      -   uses: shivammathur/setup-php@v2
          with:
            php-version: 7.4

      -   run: composer install --no-progress --ansi

      -   run: vendor/bin/easy-ci php-versions-json

      - id: output_data
        run: echo "::set-output name=matrix::$(vendor/bin/easy-ci php-versions-json)"

    outputs:
      matrix: ${{ steps.output_data.outputs.matrix }}

  unit_tests:
    needs: provide_php_versions_json

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.provide_php_versions_json.outputs.matrix) }}

    name: PHP ${{ matrix.php }} tests

    steps:
      -   uses: actions/checkout@v2

      -   uses: shivammathur/setup-php@v2
          with:
            php-version: ${{ matrix.php }}
            coverage: none

      # composer install cache - https://github.com/ramsey/composer-install
      - if: "matrix.php == 7.3"
        uses: "ramsey/composer-install@v1"

      - if: "matrix.php == 7.4"
        uses: "ramsey/composer-install@v1"

      - if: "matrix.php >= 8"
        uses: "ramsey/composer-install@v1"
        with:
          composer-options: "--ignore-platform-req php"


      - name: Run phplint - Syntax check
        run: ./vendor/bin/phplint -c  ci/phplint.yml lib
      - name: Run phpcs - PSR2 check
        run: ./vendor/bin/phpcs --standard=ci/phpbcs.xml lib
      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit test